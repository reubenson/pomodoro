continue
@todo
@todo.update(todo_params)
@todo
exit
todo_params
exit
password_params[:password].length
password_params[:password].is_empty?
password_params[:password].isempty?
password_params[:password]
exit
@user.password == params[:password]
exit
@user.password_hash
@user.password = "son"
@user.password_hash
@user.password = "son"
@user.password_hash
@user.password = "sons"
@user.password_hash
@user.password = "son"
@user.password == params[:password]
exit
user_params
@user.password = password_params
password_params
exit
password_params
params
params[:password]
@user.password
exit
@user.password_hash
@user.password == "sons"
@user.password = "sons"
@user.password == "sons"
@user.password == "son"
@user.password
@user.password = "son"
@user.password.is_password?("SON")
@user.password.is_password?("son")
@user.password.is_password?()
@user.password
@user.password == params[:password]
exit
@user.password == "$2a$10$mAXZEuFr.taSvA/ADAegbO2Y/i7MRMavTf6v0ErSDQ5MtDnUhga6i"
@user.password == "reuben"
@user.password_hash
@user.password
@user.password == params[:password]
exit
@user.password.is_password?(params[:password])
User.all
@user
@user.password
params[:password]
@user.password == params[:password]
exit
@user.password == params[:password]
exit
@user.password
exit
@user.password
@user.password_hash
@user.password
@user
exit
@user
@user.password = "son"
@user.password
@user
@user.password = password_params[:password]
password_params[:password]
password_params
@user.password
exit
@user.password
@user.password == params[:password]
params[:password]
@user.authenticate(@user.password)
@user.password_hash
@user.password
@user
exit
Password.new(@user.password_hash)
@user.password
@user.password = nil
@user.password
@user
params[:password]
exit
@user
exit
params
params[:email_address]
@user
exit
params[:email]
params[:email_address]
params
@user
exit
ex
user_params
exit
user_params
exit
params[:user]
  end
    require(:user).permit(:first_name, :last_name, :password, :password_confirmation)
def user_params
params
continue
 Todo.find(params[:id])
params
todo_params
continue
@todo
todo_params
continue
exit
params.require(:todo).permit(:title)
params
continue
params[:todo]
params
todo_params
@todo
continue
expect(response).to have_http_status(200)
json
json = JSON.parse(response.body)
response
Todo.all
exit
Todo.all
json
exit
json["todos"][1]
json["todos"][0]
json["todos"]
exit
expect(json["todos"][0]["title"]).to eq "Write some tests"
json["todos"][0]
json["todos"]
json[:todos]
json.todos[:todos]
json.todos
json
